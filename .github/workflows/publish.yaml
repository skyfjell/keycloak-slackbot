name: Application Build
on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
jobs:
  dockerbuild:
    permissions:
      contents: read
      packages: write
    name: Docker Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=sha
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  releasechart:
    needs: dockerbuild
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.8.1
      - name: Update tags
        run: |
          yq -i '.image.tag="${{ github.ref_name }}"' charts/keycloakslackbot/values.yaml 
          yq -i '(.version="${{ github.ref_name }}") | (.appVersion="${{ github.ref_name }}")' charts/keycloakslackbot/Chart.yaml
      - name: Add Helm Repositories
        run: |
          helm repo add skyfjell https://charts.skyfjell.io
      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.4.0
        with:
          charts_repo_url: https://charts.skyfjell.io/
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          CR_SKIP_EXISTING: true
